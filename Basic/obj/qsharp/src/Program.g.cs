//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Basic\",\"Name\":\"StateFlip\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/xiaoxuansaliha/Desktop/Programming/Q-sharp-Hello/Pure%20Q%23%20Works/Basic/Program.qs\",\"Position\":{\"Item1\":6,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":20}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"q\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":22},\"Item2\":{\"Line\":1,\"Column\":23}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Qubit\"},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Basic\",\"Name\":\"StateFlip\"},\"Attributes\":[],\"SourceFile\":\"/Users/xiaoxuansaliha/Desktop/Programming/Q-sharp-Hello/Pure%20Q%23%20Works/Basic/Program.qs\",\"Position\":{\"Item1\":6,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":20}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Basic\",\"Name\":\"HelloQ\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":18,\"Item2\":4},\"Comments\":{\"OpeningComments\":[\" My plan: Flip a 0 bit and a 1 bit, print out the results\"],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/xiaoxuansaliha/Desktop/Programming/Q-sharp-Hello/Pure%20Q%23%20Works/Basic/Program.qs\",\"Position\":{\"Item1\":19,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Basic\",\"Name\":\"HelloQ\"},\"Attributes\":[],\"SourceFile\":\"/Users/xiaoxuansaliha/Desktop/Programming/Q-sharp-Hello/Pure%20Q%23%20Works/Basic/Program.qs\",\"Position\":{\"Item1\":19,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"Documentation\":[]}")]
#line hidden
namespace Basic
{
    [SourceLocation("/Users/xiaoxuansaliha/Desktop/Programming/Q-sharp-Hello/Pure%20Q%23%20Works/Basic/Program.qs", OperationFunctor.Body, 7, 20)]
    public partial class StateFlip : Operation<Qubit, Int64>, ICallable
    {
        public StateFlip(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "StateFlip";
        String ICallable.FullName => "Basic.StateFlip";
        protected IUnitary<Qubit> MicrosoftQuantumIntrinsicX
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> MicrosoftQuantumIntrinsicM
        {
            get;
            set;
        }

        public override Func<Qubit, Int64> Body => (__in__) =>
        {
            var q = __in__;
#line 8 "/Users/xiaoxuansaliha/Desktop/Programming/Q-sharp-Hello/Pure%20Q%23%20Works/Basic/Program.qs"
            MicrosoftQuantumIntrinsicX.Apply(q);
#line 10 "/Users/xiaoxuansaliha/Desktop/Programming/Q-sharp-Hello/Pure%20Q%23%20Works/Basic/Program.qs"
            var res = MicrosoftQuantumIntrinsicM.Apply(q);
#line 11 "/Users/xiaoxuansaliha/Desktop/Programming/Q-sharp-Hello/Pure%20Q%23%20Works/Basic/Program.qs"
            if ((res == Result.Zero))
            {
#line 12 "/Users/xiaoxuansaliha/Desktop/Programming/Q-sharp-Hello/Pure%20Q%23%20Works/Basic/Program.qs"
                return 0L;
            }
            else
            {
#line 14 "/Users/xiaoxuansaliha/Desktop/Programming/Q-sharp-Hello/Pure%20Q%23%20Works/Basic/Program.qs"
                return 1L;
            }
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumIntrinsicX = this.Factory.Get<IUnitary<Qubit>>(typeof(Microsoft.Quantum.Intrinsic.X));
            this.MicrosoftQuantumIntrinsicM = this.Factory.Get<ICallable<Qubit, Result>>(typeof(Microsoft.Quantum.Intrinsic.M));
        }

        public override IApplyData __dataIn(Qubit data) => data;
        public override IApplyData __dataOut(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, Qubit q)
        {
            return __m__.Run<StateFlip, Qubit, Int64>(q);
        }
    }

    [SourceLocation("/Users/xiaoxuansaliha/Desktop/Programming/Q-sharp-Hello/Pure%20Q%23%20Works/Basic/Program.qs", OperationFunctor.Body, 20, -1)]
    public partial class HelloQ : Operation<QVoid, QVoid>, ICallable
    {
        public HelloQ(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "HelloQ";
        String ICallable.FullName => "Basic.HelloQ";
        public static EntryPointInfo<QVoid, QVoid> Info => new EntryPointInfo<QVoid, QVoid>(typeof(HelloQ));
        protected Allocate Allocate
        {
            get;
            set;
        }

        protected Release Release
        {
            get;
            set;
        }

        protected ICallable<Qubit, Int64> StateFlip
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> MicrosoftQuantumIntrinsicMessage
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> Body => (__in__) =>
        {
#line hidden
            {
#line 22 "/Users/xiaoxuansaliha/Desktop/Programming/Q-sharp-Hello/Pure%20Q%23%20Works/Basic/Program.qs"
                var q = Allocate.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line 25 "/Users/xiaoxuansaliha/Desktop/Programming/Q-sharp-Hello/Pure%20Q%23%20Works/Basic/Program.qs"
                    var res = StateFlip.Apply(q);
#line 26 "/Users/xiaoxuansaliha/Desktop/Programming/Q-sharp-Hello/Pure%20Q%23%20Works/Basic/Program.qs"
                    MicrosoftQuantumIntrinsicMessage.Apply(String.Format("The result should be 1: {0}", res));
#line 29 "/Users/xiaoxuansaliha/Desktop/Programming/Q-sharp-Hello/Pure%20Q%23%20Works/Basic/Program.qs"
                    res = StateFlip.Apply(q);
#line 30 "/Users/xiaoxuansaliha/Desktop/Programming/Q-sharp-Hello/Pure%20Q%23%20Works/Basic/Program.qs"
                    MicrosoftQuantumIntrinsicMessage.Apply(String.Format("The result should be 0: {0}", res));
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release.Apply(q);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void Init()
        {
            this.Allocate = this.Factory.Get<Allocate>(typeof(Microsoft.Quantum.Intrinsic.Allocate));
            this.Release = this.Factory.Get<Release>(typeof(Microsoft.Quantum.Intrinsic.Release));
            this.StateFlip = this.Factory.Get<ICallable<Qubit, Int64>>(typeof(StateFlip));
            this.MicrosoftQuantumIntrinsicMessage = this.Factory.Get<ICallable<String, QVoid>>(typeof(Microsoft.Quantum.Intrinsic.Message));
        }

        public override IApplyData __dataIn(QVoid data) => data;
        public override IApplyData __dataOut(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<HelloQ, QVoid, QVoid>(QVoid.Instance);
        }
    }
}